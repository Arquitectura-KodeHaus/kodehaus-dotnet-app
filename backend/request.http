// Definición de la URL base para facilitar la gestión
@baseUrl = http://localhost:5000/api

// ====================================================================
//                       I. LOCALES ENDPOINTS (api/Locales)
// ====================================================================

###
# 1.1 GET: Obtener todos los Locales
GET {{baseUrl}}/Locales
Accept: application/json

###
# 1.2 POST: Crear un nuevo Local
POST {{baseUrl}}/Locales
Content-Type: application/json

{
    "idPlaza": 1,
    "nombre": "La Cafetería",
    "categoria": "Comida",
    "numeroLocal": "C-01",
    "estado": "Disponible"
}

###
# 1.3 GET: Obtener un Local por ID
# Asume que el ID 1 ya existe o fue creado
GET {{baseUrl}}/Locales/1
Accept: application/json

###
# 1.4 PUT: Actualizar un Local existente
# Nota: Debes enviar el 'id' en el cuerpo
PUT {{baseUrl}}/Locales/1
Content-Type: application/json

{
    "id": 1,
    "idPlaza": 1,
    "nombre": "La Cafetería Premium",
    "categoria": "Bebidas",
    "numeroLocal": "C-01",
    "estado": "Ocupado"
}

###
# 1.5 DELETE: Eliminar un Local
# Asegúrate de usar un ID que exista y que no esté referenciado por Inventarios o Ventas
DELETE {{baseUrl}}/Locales/2


// ====================================================================
//                      II. INVENTARIOS ENDPOINTS (api/Inventarios)
// ====================================================================

###
# 2.1 GET: Obtener todos los Inventarios
GET {{baseUrl}}/Inventarios
Accept: application/json

###
# 2.2 POST: Crear un nuevo Inventario
# Asegúrate de que IdLocal (ej. 1) exista.
POST {{baseUrl}}/Inventarios
Content-Type: application/json

{
    "idLocal": 3,
    "idProductoCatalogo": 52,
    "precioUnitario": 7.99,
    "stock": 100
}

###
# 2.3 GET: Obtener un Inventario por ID
# Asume que el ID 1 ya existe
GET {{baseUrl}}/Inventarios/1
Accept: application/json

###
# 2.4 PUT: Actualizar un Inventario existente
PUT {{baseUrl}}/Inventarios/1
Content-Type: application/json

{
    "id": 1,
    "idLocal": 1,
    "idProductoCatalogo": 50,
    "precioUnitario": 6.50,
    "stock": 95
}

###
# 2.5 DELETE: Eliminar un Inventario
DELETE {{baseUrl}}/Inventarios/2


// ====================================================================
//                        III. VENTAS ENDPOINTS (api/Ventas)
// ====================================================================

###
# 3.1 GET: Obtener todas las Ventas
GET {{baseUrl}}/Ventas
Accept: application/json


###
# 3.2 POST: Crear una nueva Venta
# Ahora el backend calculará la fecha, subtotales y total automáticamente.
# Solo necesitas enviar el ID del local y los productos con sus cantidades.

POST {{baseUrl}}/Ventas
Content-Type: application/json
Accept: application/json

{
    "idLocal": 3,
    "ventaInventarios": [
        { "idInventario": 9, "cantidad": 1 }
    ]
}


###
# 3.3 GET: Obtener una Venta por ID
# Asume que el ID 1 ya existe.
GET {{baseUrl}}/Ventas/1
Accept: application/json

// ====================================================================
//                        IV. Empleados ENDPOINTS (api/Empleados)
// ====================================================================

###
GET {{baseUrl}}/Empleados
Accept: application/json

###
GET {{baseUrl}}/Empleados/2
Accept: application/json


###
POST {{baseUrl}}/Empleados
Content-Type: application/json
Accept: application/json

{
  "nombre": "Laura Gómez",
  "cargo": "Supervisora",
  "localId": 1
}

###
PUT {{baseUrl}}/Empleados/2
Content-Type: application/json
Accept: application/json

{
  "nombre": "María López",
  "cargo": "Jefa de Ventas",
  "localId": 1
}

